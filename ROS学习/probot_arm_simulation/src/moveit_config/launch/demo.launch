<launch>

  <!-- 指定路径规划器 -->
  <arg name="pipeline" default="ompl" />

  <!-- 默认情况下，我们不启动数据库(它可以很大) -->
  <arg name="db" default="false" />
  <!-- 允许用户指定数据库位置 -->
  <arg name="db_path" default="$(find moveit_config)/default_warehouse_mongo_db" />

  <!-- 默认情况下，我们不处于调试模式 -->
  <arg name="debug" default="false" />

  <!-- 默认情况下，我们将加载或覆盖robot_description -->
  <arg name="load_robot_description" default="true"/>

  <!-- 选择控制器管理器:fake、simple或ros_control -->
  <arg name="moveit_controller_manager" default="fake" />
  <!-- 设置fake控制器的执行模式 -->
  <arg name="fake_execution_type" default="interpolate" />

  <!-- 默认情况下，隐藏joint_state_publisher的GUI在 'fake' controller_manager模式 -->
  <arg name="use_gui" default="false" />
  <arg name="use_rviz" default="true" />

  <!-- If needed, broadcast static tf for robot root -->



  <group if="$(eval arg('moveit_controller_manager') == 'fake')">
    <!-- 我们没有连接真正的机器人，所以通过joint_state_publisher发布假的关节状态
         MoveIt的假控制器的联合状态通过'source_list'参数来考虑
          -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg use_gui)">
      <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>
    <!-- If desired, a GUI version is available allowing to move the simulated robot around manually
         This corresponds to moving around the real robot without the use of MoveIt. -->
    <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
      <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>

    <!-- Given the published joint states, publish tf for the robot links -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
  </group>

  <!-- 运行主MoveIt可执行程序，不执行轨迹(默认情况下我们没有配置控制器) -->
  <include file="$(dirname)/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="moveit_controller_manager" value="$(arg moveit_controller_manager)" />
    <arg name="fake_execution_type" value="$(arg fake_execution_type)"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
  </include>

  <!-- 运行Rviz并加载默认配置以查看move_group节点的状态 -->
  <include file="$(dirname)/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(dirname)/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- 如果启用了数据库加载，也要启动mongodb -->
  <include file="$(dirname)/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>
